{"version":3,"sources":["components/NavbarLinks.jsx","components/Navbar.jsx","Post.jsx","posts/TestPost1.jsx","posts/test_post_2.jsx","posts/test_post_3.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["NavbarLink","link","className","onClick","navigate","pagePath","pageName","NavbarLinks","currentPage","pageHierarchy","this","props","path","pageLinks","links","map","name","parent","parentSuggestion","makeSuggestion","unshift","key","React","PureComponent","require","Navbar","_handleEnter","event","parsePath","state","text","_handleChange","target","value","length","setState","_handleSelect","index","selectionStart","_toggleCaret","shouldRenderCaret","navRef","current","focus","renderCaret","errorMessage","createRef","pathToParse","startsWith","slice","normalizedPath","normalize","endsWith","console","log","pages","includes","letter","prefix","suffix","textLength","calculateGradientStops","caretStart","caretEnd","tabIndex","onBlur","onFocus","ref","type","style","background","minWidth","maxWidth","onChange","onSelect","onKeyPress","Post","displayedContent","title","content","preview","children","TestPost1","test_post_2","test_post_3","Home","About","Posts","useEffect","document","querySelectorAll","forEach","block","hljs","highlightBlock","TestPost2","TestPost3","App","Object","keys","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.1adfdcc0.chunk.js","sourcesContent":["import React from \"react\";\nimport { navigate } from \"@reach/router\";\nimport { pageHierarchy } from \"../App\";\nimport \"../index.css\";\n\nfunction NavbarLink({ link }) {\n  return (\n    <div className=\"navbar-link\" onClick={() => navigate(link.pagePath)}>\n      <pre>{link.pageName}</pre>\n    </div>\n  );\n}\n\nclass NavbarLinks extends React.PureComponent {\n  makeSuggestion(pagePath, pageName) {\n    return {\n      pageName,\n      pagePath\n    };\n  }\n\n  render() {\n    const currentPage = pageHierarchy[this.props.path];\n    const pageLinks = currentPage.links.map(pagePath => {\n      const pageName = pageHierarchy[pagePath].name;\n      return { pageName, pagePath };\n    });\n    if (currentPage.parent != null) {\n      const parentSuggestion = this.makeSuggestion(\n        currentPage.parent,\n        `.. (${pageHierarchy[currentPage.parent].name})`\n      );\n      pageLinks.unshift(parentSuggestion);\n    }\n\n    return (\n      <div className=\"navbar-links-wrapper\">\n        {pageLinks.map(link => (\n          <NavbarLink key={link.pagePath} link={link} />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default NavbarLinks;\n","/* @flow strict-local */\nimport React from \"react\";\nimport { navigate } from \"@reach/router\";\nimport { pages } from \"../App\";\nimport NavbarLinks from \"./NavbarLinks\";\nimport \"../index.css\";\n\nconst path = require(\"path\");\n\nclass Navbar extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorMessage: \"\",\n      index: 0,\n      text: \"\",\n      renderCaret: false\n    };\n\n    this.navRef = React.createRef();\n  }\n\n  parsePath(text) {\n    let pathToParse;\n    if (text.length === 0) {\n      this.setState({\n        errorMessage: \"\"\n      });\n    }\n\n    if (text === \"~\" || text === \"home\") {\n      pathToParse = \"/\";\n    } else if (text.startsWith(\"/\") || text.startsWith(\"~/\")) {\n      // parse as though it's the home dir\n      pathToParse = \"/\" + text.slice(1);\n    } else {\n      pathToParse = this.props.path + text;\n    }\n\n    let normalizedPath = path.normalize(pathToParse);\n    if (!normalizedPath.endsWith(\"/\")) {\n      normalizedPath = normalizedPath + \"/\";\n    }\n    console.log(normalizedPath);\n\n    if (pages.includes(normalizedPath)) {\n      if (normalizedPath !== this.props.path) {\n        navigate(normalizedPath);\n      } else {\n        this.setState({\n          index: 0,\n          text: \"\",\n          errorMessage: \"\"\n        });\n      }\n      return;\n    }\n\n    this.setState({\n      index: 0,\n      text: \"\",\n      errorMessage: `cd: no such file or directory ${this.state.text}`\n    });\n  }\n\n  _handleEnter = event => {\n    if (event.key === \"Enter\") {\n      this.parsePath(this.state.text);\n    }\n  };\n\n  _handleChange = event => {\n    if (event.target.value.length > 30) {\n      return;\n    }\n    this.setState({ text: event.target.value });\n  };\n\n  _handleSelect = event => {\n    this.setState({ index: event.target.selectionStart });\n  };\n\n  _toggleCaret = shouldRenderCaret => {\n    if (shouldRenderCaret) {\n      this.navRef.current.focus();\n    }\n    this.setState({\n      renderCaret: shouldRenderCaret\n    });\n  };\n\n  updateStateText(text, index, letter) {\n    const prefix = text.slice(0, index);\n    const suffix = text.slice(index);\n\n    if (letter === \"Backspace\") {\n      return prefix.slice(0, -1) + suffix;\n    }\n    if (letter === \"Delete\") {\n      return prefix + suffix.slice(1);\n    }\n    return prefix + letter + suffix;\n  }\n\n  calculateGradientStops(text, index) {\n    const textLength = text.length + 1;\n    const caretStart = (index / textLength) * 100;\n    const caretEnd = ((index + 1) / textLength) * 100;\n    return [caretStart, caretEnd];\n  }\n\n  render() {\n    const { errorMessage, text, index, renderCaret } = this.state;\n    const [caretStart, caretEnd] = this.calculateGradientStops(text, index);\n\n    return (\n      <div className=\"navbar\">\n        <div\n          className=\"navbar-input-wrapper\"\n          tabIndex={1}\n          onBlur={() => this._toggleCaret(false)}\n          onFocus={() => this._toggleCaret(true)}\n        >\n          <pre className=\"navbar-path\">{\"~\" + this.props.path}</pre>\n          <pre> $ cd </pre>\n          <input\n            className=\"navbar-input\"\n            ref={this.navRef}\n            type=\"text\"\n            style={{\n              background: renderCaret\n                ? `linear-gradient(\n                to right, \n                #071630 0%, \n                #071630 ${caretStart}%, \n                #f569ff ${caretStart}%, \n                #f569ff ${caretEnd}%, \n                #071630 ${caretEnd}%, \n                #071630 100%\n              )`\n                : \"#071630\",\n              minWidth: (text.length + 1) * 0.9 + \"rem\",\n              maxWidth: (text.length + 1) * 0.9 + \"rem\"\n            }}\n            value={text}\n            onChange={this._handleChange}\n            onSelect={this._handleSelect}\n            onKeyPress={this._handleEnter}\n          />\n        </div>\n        {errorMessage !== \"\" && (\n          <div className=\"navbar-error-message\">\n            <pre>{errorMessage}</pre>\n          </div>\n        )}\n        <NavbarLinks path={this.props.path} />\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport \"./index.css\";\n\nfunction Post({ title, content, preview }) {\n  let displayedContent;\n  if (preview) {\n    displayedContent = content.props.children[0];\n  } else {\n    displayedContent = content;\n  }\n  return (\n    <div className=\"post-wrapper\">\n      <h1>{\"==> \" + title + \" <==\"}</h1>\n      {displayedContent}\n    </div>\n  );\n}\n\nexport default Post;\n","import React from \"react\";\n\nfunction TestPost1() {\n  return (\n    <>\n      <p>\n        On the other hand, we denounce with righteous indignation and dislike\n        men who are so beguiled and demoralized by the charms of pleasure of the\n        moment, so blinded by desire, that they cannot foresee the pain and\n        trouble that are bound to ensue.\n      </p>\n      <p>\n        Equal blame belongs to those who fail in their duty through weakness of\n        will, which is the same as saying through shrinking from toil and pain.\n        These cases are perfectly simple and easy to distinguish.\n      </p>\n      <p>\n        In a free hour, when our power of choice is untrammelled and when\n        nothing prevents our being able to do what we like best, every pleasure\n        is to be welcomed and every pain avoided. But in certain circumstances\n        and owing to the claims of duty or the obligations of business it will\n        frequently occur that pleasures have to be repudiated and annoyances\n        accepted. The wise man therefore always holds in these matters to this\n        principle of selection: he rejects pleasures to secure other greater\n        pleasures, or else he endures pains to avoid worse pains.\n      </p>\n    </>\n  );\n}\n\nexport default TestPost1;\n","import React from \"react\";\n\nfunction test_post_2() {\n  return (\n    <>\n      <pre className=\"python\">\n        <code>{`def print_foo_five():\n  for foo in range(1,5):\n    print(\"foo %d\" % foo)\n\n  return None\n`}</code>\n      </pre>\n      <p>\n        But I must explain to you how all this mistaken idea of denouncing\n        pleasure and praising pain was born and I will give you a complete\n        account of the system, and expound the actual teachings of the great\n        explorer of the truth, the master-builder of human happiness.\n      </p>\n      <p>\n        No one rejects, dislikes, or avoids pleasure itself, because it is\n        pleasure, but because those who do not know how to pursue pleasure\n        rationally encounter consequences that are extremely painful. Nor again\n        is there anyone who loves or pursues or desires to obtain pain of\n        itself, because it is pain, but because occasionally circumstances occur\n        in which toil and pain can procure him some great pleasure.\n      </p>\n      <p>\n        To take a trivial example, which of us ever undertakes laborious\n        physical exercise, except to obtain some advantage from it? But who has\n        any right to find fault with a man who chooses to enjoy a pleasure that\n        has no annoying consequences, or one who avoids a pain that produces no\n        resultant pleasure?\n      </p>\n    </>\n  );\n}\n\nexport default test_post_2;\n","import React from \"react\";\n\nfunction test_post_3() {\n  return (\n    <>\n      <p>\n        This is to test some <code>{`inline code styles`}</code> that{\" \"}\n        <em>may</em> or <strong>may not</strong> work.\n      </p>\n      <p>Dummy text</p>\n    </>\n  );\n}\n\nexport default test_post_3;\n","/* @flow strict-local */\n\nimport Navbar from \"./components/Navbar\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { Router } from \"@reach/router\";\nimport logo from \"./logo.svg\";\nimport Post from \"./Post\";\nimport TestPost1 from \"./posts/TestPost1\";\nimport TestPost2 from \"./posts/test_post_2\";\nimport TestPost3 from \"./posts/test_post_3\";\nimport hljs from \"highlight.js\";\nimport \"./hljs.css\";\n\nconst Home = () => (\n  <div>\n    <Navbar path=\"/\" />\n    <header className=\"App-header\">Home page under construction</header>\n  </div>\n);\n\nconst About = () => (\n  <div>\n    <Navbar path=\"/about/\" />\n    <header className=\"App-header\">About page under construction too</header>\n  </div>\n);\n\nconst Posts = () => {\n  useEffect(() => {\n    console.log(document.querySelectorAll(\"pre code\"));\n    document.querySelectorAll(\"pre code\").forEach(block => {\n      hljs.highlightBlock(block);\n    });\n  });\n\n  return (\n    <div>\n      <Navbar path=\"/posts/\" />\n      <div className=\"container\">\n        <Post\n          path=\":postName\"\n          title=\"test_post_1.txt\"\n          content={TestPost1()}\n          preview\n        />\n        <Post\n          path=\":postName\"\n          title=\"test_post_2.txt\"\n          content={TestPost2()}\n          preview\n        />\n        <Post\n          path=\":postName\"\n          title=\"test_post_3.txt\"\n          content={TestPost3()}\n          preview\n        />\n      </div>\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <Router>\n      <Home path=\"/\" />\n      <About path=\"about/\" />\n      <Posts path=\"posts/\" />\n    </Router>\n  );\n}\n\nexport default App;\n\n/**\n * pageHierarchy structure:\n * {\n *   full path : {\n *     name: friendly name,\n *     parent: parent directory,\n *     links: array of full paths\n *   }\n * }\n */\nexport const pageHierarchy = {\n  \"/\": {\n    name: \"home\",\n    parent: null,\n    links: [\"/about/\", \"/posts/\"]\n  },\n  \"/about/\": {\n    name: \"about/\",\n    parent: \"/\",\n    links: []\n  },\n  \"/posts/\": {\n    name: \"posts/\",\n    parent: \"/\",\n    links: []\n  }\n};\nexport const pages = Object.keys(pageHierarchy);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}